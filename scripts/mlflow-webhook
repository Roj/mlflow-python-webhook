#!/usr/bin/env python
import argparse
import logging
from fastapi import FastAPI
import uvicorn
import mlflow_webhook

parser = argparse.ArgumentParser(
    description="A server that listens for Github Webhooks and runs the changed MLFlow entrypoints."
)

parser.add_argument("branch", help="Branch to listen to for pushes.")
parser.add_argument("--debug", help="Log debug statements.", action="store_true")
parser.add_argument("--ip", help="IP to bind server to.")
parser.add_argument("--port", help="Port to listen.")
parser.add_argument("--secret", help="Secret to expect from GitHub.")
parser.add_argument("--repo", help="Repository with the MLflow config.", default=".")
args = parser.parse_args()

app = FastAPI()
pipeline = mlflow_webhook.Pipeline(branch=args.branch, repo=args.repo)

@app.post("/webhook")
def webhook(event: mlflow_webhook.Event):
    # TODO: secret!
    return mlflow_webhook.hook(event, pipeline)


if __name__ == "__main__":
    if args.debug:
        logging.basicConfig(level=logging.DEBUG)
    logging.debug("Called with args: %s", args)
    uvicorn.run(app, port=8888, host="0.0.0.0")